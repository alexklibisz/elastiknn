name: Release
on:
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  release-docs:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on:
      - ubuntu-22.04
    timeout-minutes: 10
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.7.15'
          cache: 'pip'
      - uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate Jekyll Site
        run: |
          sudo chown -R runneradmin:runneradmin docs
          task docsCompile
          sudo chown -R runner:docker docs
      - name: Generate Python Docs
        run: |
          task pyDocs
          mkdir -p docs/_site/docs
          mv client-python/pdoc/elastiknn docs/_site/docs/pdoc
      - name: Configure Pages
        uses: actions/configure-pages@v2
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'docs/_site'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  release:
    runs-on:
      - ubuntu-22.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Needed for git-based changelog.
      - uses: actions/setup-python@v4
        with:
          python-version: '3.7.15'
          cache: 'pip'
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 19
          cache: 'sbt'
      - uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Release Credentials
        env:
          PYPIRC_B64: ${{ secrets.PYPIRC_B64 }}
        run: ./.github/scripts/setup-env.sh
      - name: Setup Setuptools
        run: python3 -m pip install setuptools
      - name: Publish to PyPi
        run: task pyPublishRelease
      - name: Publish to Github
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: task jvmPublishRelease
