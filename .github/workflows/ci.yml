name: "CI"

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  show-github-context:
    timeout-minutes: 1
    runs-on: ubuntu-20.04
    env:
      GITHUB_CONTEXT: ${{ toJson(github) }}
    steps:
      - run: echo $GITHUB_CONTEXT
  
  test-jvm:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 17
          cache: 'sbt'
      - name: Misc. Setup
        run: |
          sudo snap install task --classic
          sudo sysctl -w vm.max_map_count=262144
      - name: Initialize SBT
        run: sbt update
      - name: Compile without Cache
        run: |
          task jvm:clean
          sbt compile Test/compile
          task jvm:clean
      - name: Pull Build Cache
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: sbt pullRemoteCache
      - name: Compile with Cache
        run: sbt compile Test/compile
      - name: Run Cluster
        run: task cluster:run
      - name: Test
        run: task jvm:test
      - name: Push Build Cache
        if: github.event_name == 'push'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: sbt pushRemoteCache
      - name: Cluster Logs
        if: failure()
        run: task cluster:logs
      
  test-python:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 17
          cache: 'sbt'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7.5'
      - name: Misc. Setup
        run: |
         sudo snap install task --classic
         sudo sysctl -w vm.max_map_count=262144
      - name: Docs
        run: task py:docs
      - name: Pull Build Cache
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: sbt pullRemoteCache
      - name: Run Cluster
        run: task cluster:run
      - name: Test
        run: task py:test
      - name: Cluster Logs
        if: failure()
        run: task cluster:logs

  test-benchmarks:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 17
          cache: 'sbt'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.6'
          cache: 'pip'
      - name: Misc. Setup
        run: |
          sudo snap install task --classic
          sudo sysctl -w vm.max_map_count=262144
      - name: Initialize Submodule
        run: task annb:submodule
      - name: Install Dependencies
        run: task annb:install
      - name: Pull Build Cache
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: sbt pullRemoteCache
      - name: Run Cluster
        run: task cluster:run
      - name: Test
        run: task annb:test
      - name: Cluster Logs
        if: failure()
        run: task cluster:logs

  build-jekyll-site:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Misc. Setup
        run: |
          sudo snap install task --classic
      - name: Compile Jekyll Site
        run: |
          chmod -R 777 docs
          task docs:compile

  publish-snapshots:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    needs: [show-github-context, test-jvm, test-python, test-benchmarks]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Needed for git-based changelog.
      - name: Setup Release Credentials
        env:
          PYPIRC_B64: ${{ secrets.PYPIRC_B64 }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SSH_CONFIG_B64: ${{ secrets.SSH_CONFIG_B64 }}
          SSH_IDRSA_B64: ${{ secrets.SSH_IDRSA_B64 }}
        run: ./.github/scripts/setup-env.sh
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 17
          cache: 'sbt'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7.5'
          cache: 'pip'
      - run: |
          sudo snap install task --classic
          sudo snap install hub --classic
          python3 -m pip install setuptools
      - name: Publish to PyPi
        run: task py:publish-snapshot VERSION=$(cat version)-dev${{ github.run_number }}
        if: github.event_name == 'pull_request'
      - name: Pull Build Cache
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: sbt pullRemoteCache
      - name: Publish Plugin from PR
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: task jvm:plugin:publish:snapshot VERSION=$(cat version)-PR${{ github.event.pull_request.number }}-SNAPSHOT
      - name: Publish Plugin from Master
        if: github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./.github/scripts/delete-snapshot-releases.sh
          task jvm:plugin:publish:snapshot VERSION=$(cat version)-MASTER${{ github.run_number }}-SNAPSHOT
