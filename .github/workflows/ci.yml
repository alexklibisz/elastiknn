name: CI

on:
  pull_request:
    branches: 
      - master
  push:
    branches:
      - master

jobs:
  context:
    runs-on: ubuntu-18.04
    steps:
    - name: Show GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
  build:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2

    # Secrets used for publishing.
    - name: Setup Secrets
      env:
        GPG_SECRET_B64: ${{ secrets.GPG_SECRET_B64 }}
        GRADLE_PROPERTIES_B64: ${{ secrets.GRADLE_PROPERTIES_B64 }}
        PYPIRC_B64: ${{ secrets.PYPIRC_B64 }}
      run: ./.github/scripts/setup-secrets.sh

    # Language Setup
    - name: Setup Python
      run: |
        python3 --version
        sudo apt-get install -y python3-setuptools

    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: 12.0.2

    # Caching Setup
    - name: Cache Gradle
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Cache Pip
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip
    - name: Cache SBT ivy cache
      uses: actions/cache@v1
      with:
        path: ~/.ivy2/cache
        key: ${{ runner.os }}-sbt-ivy-cache-${{ hashFiles('**/build.sbt') }}
    - name: Cache SBT
      uses: actions/cache@v1
      with:
        path: ~/.sbt
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}

    # Actual Build
    - name: Compile JVM
      run: make compile/gradle
    - name: Start Testing Cluster
      run: make run/cluster
    - name: Test JVM
      run: make test/gradle
    - name: Test Python
      run: make test/python
    - name: Run Examples
      run: make examples

    # Snapshot Releases
    - name: Set Version (PR)
      if: github.event_name == 'pull_request'
      run: |
        echo $(cat version)-dev${{ github.run_number }} > version-python
        echo $(cat version)-PR${{ github.event.pull_request.number }}-SNAPSHOT > version-sonatype
    - name: Set Version (Master)
      if: github.event_name == 'push'
      run: |
        echo $(cat version)-dev${{ github.run_number }} > version-python
        echo $(cat version)-MASTER${{ github.run_number }}-SNAPSHOT > version-sonatype
    - name: Publish Python Libraries to PyPi
      run: |
        cp version-python version
        make publish/snapshot/python
    - name: Publish Scala Libraries to Sonatype
      run: |
        cp version-sonatype version
        make publish/snapshot/sonatype
    - name: Publish Plugin Zip to Github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cp version-sonatype version
        sudo snap install hub --classic
        make publish/snapshot/plugin

    # Cleanup
    - name: Clean
      run: make clean
