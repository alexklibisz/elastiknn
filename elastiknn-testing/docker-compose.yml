# Docker-compose setup for running tests and micro-benchmarks.
# Github's virtual environments have 2 CPUs, 7GB memory, 14GB SSD.
# Important to run > 1 node because some parts of the plugin
# deal with communication/serialization between nodes.
version: "3.8"

services:
  # Single master node.
  elasticsearch_master:
    build:
      context: ../elastiknn-plugin
      dockerfile: Dockerfile
    container_name: elasticsearch_master
    environment:
      - node.name=elasticsearch_master
      - cluster.name=docker-cluster
      - cluster.initial_master_nodes=elasticsearch_master
      - node.master=true
      - node.data=false
      - node.ml=false
      - node.ingest=false
      - bootstrap.memory_lock=true
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms700m -Xmx700m
    ports:
      - "9200:9200"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      memlock:
        soft: -1
        hard: -1

  elasticsearch_data:
    build:
      context: ../elastiknn-plugin
      dockerfile: Dockerfile
    environment:
      - cluster.name=docker-cluster
      - cluster.initial_master_nodes=elasticsearch_master
      - discovery.zen.ping.unicast.hosts=elasticsearch_master
      - node.master=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms4G -Xmx4G
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      memlock:
        soft: -1
        hard: -1

  # Minio to mimick S3 for benchmarks.
  minio:
    image: minio/minio
    command: server /data
    environment:
      - MINIO_ACCESS_KEY=${AWS_ACCESS_KEY_ID:-elastiknn}
      - MINIO_SECRET_KEY=${AWS_SECRET_ACCESS_KEY:-elastiknn}
    ports:
      - "9000:9000"
    volumes:
      - ".minio:/data"
