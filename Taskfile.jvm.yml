version: '3'

tasks:

  clean: "{{ .CMD_GRADLE }} clean"

  compile:
    sources:
      - build.gradle
      - "**/*.java"
      - "**/*.scala"
    cmds:
      - "{{ .CMD_GRADLE }} compileScala compileJava compileTestScala compileTestJava unifiedScalaDocs"

  test: "{{ .CMD_GRADLE }} test"

  publish-libraries-local: "{{ .CMD_GRADLE }} publishToMavenLocal -x signMavenPublication -Pversion={{ .VERSION }}"
    
  publish-libraries-snapshot: "{{ .CMD_GRADLE }} publish -Pversion={{ .VERSION }}"

  publish-libraries-release: 
    status:
      - curl -f -s -o /dev/null {{ .GITHUB_URL }}/releases/tag/{{ .VERSION }}
    env: 
      # TODO: make this a parameter like -Pversion above.
      SONATYPE_URL: https://oss.sonatype.org/service/local/staging/deploy/maven2
    cmds:
      - "{{ .CMD_GRADLE }} publish"

  publish-docs:
    status:
      - curl -f -s -o /dev/null https://{{ .SITE_ARCH_DIR }}/{{ .VERSION }}/scaladoc/index.html
    cmds:
      - task: compile
        force: True
      - ssh {{ .SITE_SSH_ALIAS }} mkdir -p {{ .SITE_ARCH_DIR }}/{{ .VERSION }}
      - rsync -av --delete build/docs/scaladoc {{ .SITE_SSH_ALIAS }}:{{ .SITE_ARCH_DIR }}/{{ .VERSION }}
      - ssh {{ .SITE_SSH_ALIAS }} mkdir -p {{ .SITE_MAIN_DIR }}/{{ .VERSION }}
      - rsync -av --delete build/docs/scaladoc {{ .SITE_SSH_ALIAS }}:{{ .SITE_MAIN_DIR }}/docs

  publish-plugin-local:
    sources:
      - build.gradle
      - "**/*.java"
      - "**/*.scala"
    cmds:
      - "{{ .CMD_GRADLE }} assemble"

  publish-plugin-snapshot:
    cmds:
      - task: publish-plugin-local
        force: True
      - echo {{ .VERSION }} > release.md
      - echo "" >> release.md
      - hub release delete {{ .VERSION }} || true
      - hub release create -p -F release.md -a elastiknn-plugin/build/distributions/elastiknn-*.zip {{ .VERSION }}

  publish-plugin-release:
    status:
      - curl -f -s -o /dev/null {{ .GITHUB_URL }}/releases/tag/{{ .VERSION }}
    cmds:
      - task: publish-plugin-local
        force: True
      - echo {{ .VERSION }} > release.md
      - echo "" >> release.md
      - cat changelog.md | python .github/scripts/latestchanges.py >> release.md
      - hub release create -p -F release.md -a elastiknn-plugin/build/distributions/elastiknn-*.zip {{ .VERSION }}

  run:gradle:
    desc: Run Elasticsearch using gradle
    cmds:
      - "{{ .CMD_GRADLE }} :plugin:run --data-dir={{ .DATA_DIR | default \"/tmp/elastiknn\" }} -Dtests.heap.size={{ .HEAP | default \"4G\" }} -Dtests.es.thread_pool.search.size={{ .THREADS | default 1 }} {{ .DEBUG }}"

  run:debug:
    cmds:
      - task: run-gradle
        vars: 
          DEBUG: "--debug-jvm"

  
