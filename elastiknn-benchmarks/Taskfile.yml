version: '3'

vars:
  ECR_PREFIX:
    sh: echo $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  ECR_BENCHMARKS_PREFIX: "{{ .ECR_PREFIX }}/elastiknn-benchmarks-cluster"

tasks:

  ecr-login: $(aws ecr get-login --no-include-email)

  foo: echo {{ .ECR_PREFIX }}

  imgs:driver:push:
    deps:
      - ecr-login
    cmds:
      - "cd {{ .PROJECT_ROOT }} && {{ .CMD_GRADLE }} :benchmarks:shadowJar"
      - docker build -t {{ .ECR_BENCHMARKS_PREFIX }}.driver .
      - docker push {{ .ECR_BENCHMARKS_PREFIX }}.driver

  imgs:elastiknn:push:
    deps:
      - ecr-login
    cmds:
      - "cd {{ .PROJECT_ROOT }} && {{ .CMD_GRADLE }} :plugin:assemble"
      - cd {{ .PROJECT_ROOT }}/elastiknn-plugin && docker build -t {{ .ECR_BENCHMARKS_PREFIX }}.elastiknn .
      - docker push {{ .ECR_BENCHMARKS_PREFIX }}.elastiknn

  imgs:datasets:push:
    dir: python
    deps:
      - ecr-login
    cmds:
      - docker build -t {{ .ECR_BENCHMARKS_PREFIX }}.datasets .
      - docker push {{ .ECR_BENCHMARKS_PREFIX }}.datasets

  imgs:push:
    cmds:
      - task: imgs:driver:push
      - task: imgs:elastiknn:push
      - task: imgs:datasets:push

  argo:datasets:run:
    dir: deploy
    deps:
      - imgs:datasets:push
    cmds:
      - envsubst < datasets-workflow.yaml | argo submit -

  argo:benchmark:run:
    dir: deploy
    deps:
      - imgs:driver:push
      - imgs:elastiknn:push
    cmds:
      - argo lint benchmark-cronworkflow.yaml
      - envsubst < benchmark-cronworkflow.yaml | kubectl apply -f -
      - argo submit --from=CronWorkflow/benchmark --watch

  argo:delete:
    cmds:
      - argo delete --all
      - kubectl delete elasticsearch --all
